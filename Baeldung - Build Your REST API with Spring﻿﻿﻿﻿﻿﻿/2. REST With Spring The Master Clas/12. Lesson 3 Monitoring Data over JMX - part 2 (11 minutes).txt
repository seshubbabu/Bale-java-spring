1. Goals
The goal of this lesson is simple - to take you through the basics of profiling your running API and reading the JMX data it exposes. 

2. Lesson Notes
Configure a Tomcat server to accept remote connections
Step 1 - add the JMX listener to the Tomcat config:

sudo vim $TOMCAT_INSTALL_DIR/tomcat/conf/server.xml
<Listener className="org.apache.catalina.mbeans.JmxRemoteLifecycleListener" rmiRegistryPortPlatform="10001" rmiServerPortPlatform="10002"/>
Step 2 - download the JMX jar into the Tomcat lib directory:

cd $TOMCAT_INSTALL_DIR/tomcat/lib
wget http://apache.javapipe.com/tomcat/tomcat-8/v8.0.30/bin/extras/catalina-jmx-remote.jar
sudo chmod a+rwx catalina-jmx-remote.jar
Step 3 - Configure the runtime

export CATALINA_OPTS="-Xms512m -Xmx1024m -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=ec2-54-209-18-157.compute-1.amazonaws.com"

Then, in VisualVM - define the remote host and connection:

- first, add a remote connection, with just the host

- then, within that, add the full JMX connection:

service:jmx:rmi://ec2-54-209-18-157.compute-1.amazonaws.com:10002/jndi/rmi://ec2-54-209-18-157.compute-1.amazonaws.com:10001/jmxrmi

3. Resources
- The VisualVM Homepage - https://visualvm.java.net/
- VisualVM - MBeans - https://visualvm.java.net/mbeans_tab.html

- VisualVM - JMX Connections - https://visualvm.java.net/jmx_connections.html

- Monitoring and management over JMX - https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-jmx.html